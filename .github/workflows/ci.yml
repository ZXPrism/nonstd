name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-test-bench:
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
        compiler: [gcc, clang, msvc]
        exclude:
          - os: macos-latest
            compiler: msvc
          - os: ubuntu-latest
            compiler: msvc
          - os: windows-latest
            compiler: gcc
          - os: windows-latest
            compiler: clang

    runs-on: ${{ matrix.os }}
    name: ${{ matrix.os }} - ${{ matrix.compiler }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install xmake
        uses: xmake-io/github-action-setup-xmake@v1

      - name: Set up compiler
        if: matrix.compiler == 'clang'
        run: xmake f --toolchain=clang -y

      - name: Set up compiler
        if: matrix.compiler == 'gcc'
        run: xmake f --toolchain=gcc -y

      - name: Set up compiler
        if: matrix.compiler == 'msvc'
        run: xmake f --toolchain=msvc -y

      - name: Build
        run: xmake -y

      - name: Run tests
        shell: bash
        run: |
          for exe in $(find build -type f -executable -name "test_*"); do
            echo "Running $exe"
            $exe
          done

      - name: Run benchmarks
        shell: bash
        run: |
          for exe in $(find build -type f -executable -name "bench_*"); do
            echo "Running $exe"
            $exe
          done
